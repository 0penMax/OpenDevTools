name: Create release

on:
  push:
    branches:
      - master
permissions:
  contents: write

jobs:
  run_tests_build_linux_and_windows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod tidy

      - name: Install X11 and GTK3 development libraries
        run: |
          sudo apt update
          sudo apt install libx11-dev libgtk-3-dev

      - name: Run tests
        run: go test ./...  # Run all tests

      - name: Build for linux amd64
        run: |
          GOOS=linux GOARCH=amd64 go build -o output/odt-linux .

      - name: Build for windows amd64
        run: |
          GOOS=windows GOARCH=amd64 go build -o output/odt-windows . 

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
            name: linux-windows-binaries
            path: output/*

  build_mac_os:
    needs: run_tests_build_linux_and_windows
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod tidy

      - name: Build for macos amd64
        run: |
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 go build -o output/odt-macos . 

      - name: Build for macos ARM
        run: |
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=1 go build -o output/odt-macos-arm .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
            name: macos-binaries
            path: output/*

  release:
    needs: build_mac_os
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux and Windows Artifacts
        uses: actions/download-artifact@v4
        with:
            name: linux-windows-binaries
            path: output/

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
            name: macos-binaries
            path: output/

      - name: List output directory
        run: ls -la output/

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: "release-${{ github.sha }}"
          files: output/*
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="commit-$tag" \
              --generate-notes \
              output/*